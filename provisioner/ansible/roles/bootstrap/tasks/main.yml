# Playbook for bootstraping the hadoop cluster nodes

- name: RSYNC Bigtop home directory to /bigtop-home
  ansible.posix.synchronize:
    src: '{{bigtop_home}}/'
    dest: '{{remote_bigtop_home}}'
  become: True

- name: Puppetize the machines
  ansible.builtin.command: '{{remote_bigtop_home}}/bigtop_toolchain/bin/puppetize.sh'
  become: True
  register: puppetize_out
- debug: 
    var: puppetize_out.stdout_lines
- debug: 
    var: puppetize_out.stderr_lines

- name: Setup env on the machines
  ansible.builtin.command: '{{remote_bigtop_home}}/provisioner/utils/setup-env-{{env_setup_distro}}.sh {{use_local_repo}}'
  become: True
  register: setupenv_out  
- debug: 
    var: setupenv_out.stdout_lines
- debug: 
    var: setupenv_out.stderr_lines

- name: Check if we need to update /etc/cloud/templates/hosts.debian.tmpl
  ansible.builtin.command: "grep 127.0.0.1 /etc/cloud/templates/hosts.debian.tmpl"
  become: True
  register: update_hosts_tpl

- name: Update /etc/hosts template /etc/cloud/templates/hosts.debian.tmpl
  become: True
  lineinfile:
    path: "/etc/cloud/templates/hosts.debian.tmpl"
    search_string: "127.0.1.1"
    line: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_fqdn']}}\t{{ hostvars[item]['ansible_hostname']}}"
    state: present
    backup: yes
    insertbefore: "127.0.0.1 localhost"
    firstmatch: yes
  with_items: "{{groups['allnodes']}}"
  when: update_hosts_tpl.rc == 0

- name: RSYNC hiera.yaml to /etc/puppet
  ansible.posix.synchronize:
    src: '{{playbook_dir}}/config/hiera.yaml'
    dest: '{{remote_puppet_home}}/hiera.yaml'
  become: True

- name: RSYNC hieradata to /etc/puppet/
  ansible.posix.synchronize:
    src: '{{playbook_dir}}/config/hieradata/'
    dest: '{{remote_puppet_home}}/hieradata'
  become: True
    
- name: Reboot all machines to pick up hostname changes
  reboot:
    reboot_timeout: 120 # 2 minutes
  become: True        